apply plugin: 'com.android.application'

android {
    signingConfigs {
        debug {
            storeFile file('/Users/pablo/.android/debug.keystore')
            keyPassword 'android'
            storePassword 'android'
            keyAlias = 'androiddebugkey'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "es.uva.gsic.adolfinstro"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 9
        versionName "1.0.8"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
}

dependencies {
    def work_version = "2.2.0"

    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"

    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"

    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"
}

dependencies {
    implementation 'androidx.appcompat:appcompat:+'
    implementation 'com.google.android.material:material:+'
}


dependencies {
    implementation 'androidx.preference:preference:1.1.0'
}

dependencies {
    implementation 'org.osmdroid:osmdroid-android:6.1.5'
    //implementation 'com.github.MKergall:osmbonuspack:6.6.0'
}

dependencies {
    implementation 'androidx.annotation:annotation:+'
    implementation 'androidx.lifecycle:lifecycle-extensions:+'
}

//ROOM
/*dependencies {
    def room_version = "2.2.3"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
}*/

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
}

dependencies {
    // add SDKs for desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
    implementation 'com.google.firebase:firebase-core:17.4.2'
    implementation 'com.google.firebase:firebase-auth:+'
    implementation 'com.google.android.gms:play-services-auth:18.0.0'
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
}

apply plugin: 'com.google.gms.google-services'

dependencies {
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
}


dependencies {
    implementation 'com.android.volley:volley:1.1.1'
}

dependencies {
    implementation 'com.squareup.picasso:picasso:2.71828'
}
